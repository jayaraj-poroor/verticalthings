/********************************************************************************
This code is automatically generated by the VerticalThings compiler. DO NOT EDIT!
********************************************************************************/

struct _arec_event {volatile int _state;};
#define NULL ((void *)0UL)
#include "../inc/vtdefs.h"
#include "../inc/stm32_hal_ex1.h"
struct _arec__syntax_test4_acq;
typedef void (*_t__syntax_test4_acq) (struct _arec__syntax_test4_acq* _this, float*  _ret0);
struct _arec__syntax_test4_acq{
    int _state = 0;
    float syntax_test4_acq_y;
    int syntax_test4_acq_x;
};
struct _arec__syntax_test4_irq;
typedef void (*_t__syntax_test4_irq) ();
struct _arec__syntax_test4_main;
typedef void (*_t__syntax_test4_main) (struct _arec__syntax_test4_main* _this, void*  _ret0);
struct _arec__syntax_test4_main{
    int _state = 0;
    float syntax_test4_main_res;
    struct _arec__syntax_test4_acq _arec__syntax_test4_acq;
};

struct _future {
    void *_parec;
    int (*_pfn)(void *, void *);    
};
/*Module vars for syntax_test4*/
struct _arec_event*  syntax_test4_dma;

//struct _arec__syntax_test4_acq*  syntax_test4_facq;
//CHANGE TO:
struct _future  syntax_test4_facq;

/*End of module vars for syntax_test4*/
int _syntax_test4_acq(struct _arec__syntax_test4_acq* _this, float* _ret0)
{
static const void * _atbl[] = { &&lstate_0, &&lstate_1, &&lstate_2 };
int _state = _this->_state;
_this->_state = 0;
if (_state > 0 && _state <= 2) goto *(_atbl[_state]);
 lstate_0:
{
    _this->syntax_test4_acq_x=(_this->syntax_test4_acq_y*2);
    syntax_test4_dma->_state = 1;
 lstate_1:
    _state = syntax_test4_dma->_state;
    if (_state > 0) {_this->_state = 1; return _this->_state;} 
 lstate_2:
    if (_ret0 == NULL){
        _this->_state = 2;
    }
    else{
        *(_ret0) = _this->syntax_test4_acq_x;
    }
    return _this->_state; 
}
return _this->_state;
}
void _syntax_test4_irq()
{
    {
        syntax_test4_dma->_state = 0;
    }
}
int _syntax_test4_main(struct _arec__syntax_test4_main* _this)
{
static const void * _atbl[] = { &&lstate_0, &&lstate_1 };
int _state = _this->_state;
_this->_state = 0;
if (_state > 0 && _state <= 1) goto *(_atbl[_state]);
 lstate_0:
{
    _this->_arec__syntax_test4_acq._state = 0;
    _this->_arec__syntax_test4_acq.syntax_test4_acq_y = 3;
    _syntax_test4_acq( &(_this->_arec__syntax_test4_acq), ((float*) 0UL)) ;

    //syntax_test4_facq= &(_this->_arec__syntax_test4_acq);
    //CHANGE TO:
    syntax_test4_facq._parec= &(_this->_arec__syntax_test4_acq);
    syntax_test4_facq._pfn = (int (*)(void *, void *) )&_syntax_test4_acq;
    
    while(1)
    {
 lstate_1:
        //_state = _syntax_test4_acq(syntax_test4_facq, (&_this->syntax_test4_main_res) );
        //CHANGE TO:
        _state = syntax_test4_facq._pfn(syntax_test4_facq._parec, (&_this->syntax_test4_main_res) );
        
        if (_state > 0) {_this->_state = 1; return _this->_state;} 
        _this->_arec__syntax_test4_acq._state = 0;
        _this->_arec__syntax_test4_acq.syntax_test4_acq_y = 3;
        _syntax_test4_acq( &(_this->_arec__syntax_test4_acq), ((float*) 0UL)) ;
        
        //syntax_test4_facq= &(_this->_arec__syntax_test4_acq);
        //CHANGE TO:
        syntax_test4_facq._parec= &(_this->_arec__syntax_test4_acq);
        syntax_test4_facq._pfn = (int (*)(void *, void *) )&_syntax_test4_acq;
    }
}
return _this->_state;
}