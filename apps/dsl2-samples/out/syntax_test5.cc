/********************************************************************************
This code is automatically generated by the VerticalThings compiler. DO NOT EDIT!
********************************************************************************/

struct _arec_event {volatile int _state;};
#define NULL ((void *)0UL)
struct _future {void *_parec; int (*_pfn)(void *, void *);}; 
#include "../inc/vtdefs.h"
#include "../inc/stm32_hal_ex1.h"
struct _arec__sys_HAL_io_completion;
typedef void (*_t__sys_HAL_io_completion) (struct _arec__sys_HAL_io_completion* _this, int*  _ret0);
struct _arec__sys_HAL_io_completion{
    int _state = 0;
    int sys_HAL_io_completion_io;
};
struct _arec__sys_HAL_start;
typedef int (*_t__sys_HAL_start) (int sys_HAL_start_io);
/*Module vars for sys*/
/*End of module vars for sys*/
typedef float _float__100[100];
struct _t__int__float__100{int r0 ; _float__100* r1 ; _t__int__float__100() :  r0( (int) 0 ),  r1( (_float__100*) 0 ){}; void operator = (const _t__int__float__100& _obj) {r0= _obj.r0; r1= _obj.r1; };  _t__int__float__100(int p0 , _float__100* p1 ): r0(p0),  r1(p1){}; };
struct _arec__syntax_test5_acq;
typedef void (*_t__syntax_test5_acq) (struct _arec__syntax_test5_acq* _this, struct _t__int__float__100*  _ret0);
struct _arec__syntax_test5_acq{
    int _state = 0;
    float syntax_test5_acq_y;
    int syntax_test5_acq_comm;
    int syntax_test5_acq_x;
    int syntax_test5_acq_rcomm;
    union _inner_arecs {
        struct _arec__sys_HAL_io_completion _arec__sys_HAL_io_completion;
    _inner_arecs(){};
}
_arecs;
};
struct _arec__syntax_test5_irq;
typedef void (*_t__syntax_test5_irq) ();
struct _arec__syntax_test5_main;
typedef void (*_t__syntax_test5_main) (struct _arec__syntax_test5_main* _this, void*  _ret0);
struct _arec__syntax_test5_main{
    int _state = 0;
    int syntax_test5_main_spi;
    union _inner_arecs {
        struct _arec__syntax_test5_acq _arec__syntax_test5_acq;
    _inner_arecs(){};
}
_arecs;
};
/*Module vars for syntax_test5*/
struct _future  syntax_test5_dma;
struct _future  syntax_test5_facq;
float syntax_test5_buf[2][100];
/*End of module vars for syntax_test5*/
int _sys_HAL_io_completion(struct _arec__sys_HAL_io_completion* _this, int* _ret0)
{
static const void * _atbl[] = { &&lstate_0 };
int _state = _this->_state;
_this->_state = 0;
if (_state > 0 && _state <= 0) goto *(_atbl[_state]);
 lstate_0:
{
}
return _this->_state;
}
int _sys_HAL_start(int sys_HAL_start_io)
{
    {
    }
}
int _syntax_test5_acq(struct _arec__syntax_test5_acq* _this, struct _t__int__float__100* _ret0)
{
static const void * _atbl[] = { &&lstate_0, &&lstate_1, &&lstate_2 };
int _state = _this->_state;
_this->_state = 0;
if (_state > 0 && _state <= 2) goto *(_atbl[_state]);
 lstate_0:
{
    _this->syntax_test5_acq_x=(_this->syntax_test5_acq_y*2);
    _sys_HAL_start(_this->syntax_test5_acq_comm) ;
    _this->_arecs._arec__sys_HAL_io_completion._state = 0;
    _this->_arecs._arec__sys_HAL_io_completion.sys_HAL_io_completion_io = _this->syntax_test5_acq_rcomm;
 lstate_1:
    _state = _sys_HAL_io_completion( &(_this->_arecs._arec__sys_HAL_io_completion), &(_this->syntax_test5_acq_comm)) ;
    if (_state > 0) {_this->_state = 1; return _this->_state;} 
 lstate_2:
    if (_ret0 == NULL){
        _this->_state = 2;
    }
    else{
        *(_ret0) = _t__int__float__100(_this->syntax_test5_acq_comm, &(syntax_test5_buf[0])) ;
    }
    return _this->_state; 
}
return _this->_state;
}
void _syntax_test5_irq()
{
    {
        syntax_test5_dma._parec = (void *) 0;
    }
}
int _syntax_test5_main(struct _arec__syntax_test5_main* _this)
{
    struct _t__int__float__100 _t__int__float__100_ret;
static const void * _atbl[] = { &&lstate_0, &&lstate_1 };
int _state = _this->_state;
_this->_state = 0;
if (_state > 0 && _state <= 1) goto *(_atbl[_state]);
 lstate_0:
{
    _this->_arecs._arec__syntax_test5_acq._state = 0;
    _this->_arecs._arec__syntax_test5_acq.syntax_test5_acq_y = 3;
    _this->_arecs._arec__syntax_test5_acq.syntax_test5_acq_comm = _this->syntax_test5_main_spi;
    _syntax_test5_acq( &(_this->_arecs._arec__syntax_test5_acq), ((struct _t__int__float__100*) 0UL)) ;
    syntax_test5_facq._parec = &(_this->_arecs._arec__syntax_test5_acq);
    syntax_test5_facq._pfn = (int (*)(void *, void *) )&_syntax_test5_acq;
    while(1)
    {
 lstate_1:
        _state = syntax_test5_facq._pfn(syntax_test5_facq._parec, (&_t__int__float__100_ret) );
        int&  res_chan = _t__int__float__100_ret.r0;
        _float__100& res_buf = *(_t__int__float__100_ret.r1);
        if (_state > 0) {_this->_state = 1; return _this->_state;} 
        _this->_arecs._arec__syntax_test5_acq._state = 0;
        _this->_arecs._arec__syntax_test5_acq.syntax_test5_acq_y = 3;
        _this->_arecs._arec__syntax_test5_acq.syntax_test5_acq_comm = _this->syntax_test5_main_spi;
        _syntax_test5_acq( &(_this->_arecs._arec__syntax_test5_acq), ((struct _t__int__float__100*) 0UL)) ;
        syntax_test5_facq._parec = &(_this->_arecs._arec__syntax_test5_acq);
        syntax_test5_facq._pfn = (int (*)(void *, void *) )&_syntax_test5_acq;
    }
}
return _this->_state;
}
/*Entry point - the 'C' main function*/
struct _arec__syntax_test5_main _arec_main;
int main(){
    int status = -1;
    _arec_main.syntax_test5_main_spi=0;
    while (status != 0){
        status = _syntax_test5_main(&_arec_main);
    }
    while (true);
    return 0;
}