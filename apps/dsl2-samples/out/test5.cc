/********************************************************************************
This code is automatically generated by the VerticalThings compiler. DO NOT EDIT!
********************************************************************************/

struct _arec_event {volatile int _state;};
#define NULL ((void *)0UL)
struct _arec__test5_m;
typedef void (*_t__test5_m) (struct _arec__test5_m* _this, float*  _ret0);
struct _arec__test5_m{
    int _state = 0;
    int test5_m_y;
    int test5_m_x;
};
struct _arec__test5_main;
typedef void (*_t__test5_main) (struct _arec__test5_main* _this, void*  _ret0);
struct _arec__test5_main{
    int _state = 0;
    float test5_main_v[100];
    float test5_main_res;
    struct _arec__test5_m _arec__test5_m;
};
struct _arec__test5_irq;
typedef void (*_t__test5_irq) ();
/*Module vars for test5*/
struct _arec__test5_m*  test5_f;
struct _arec_event*  test5_e;
/*End of module vars for test5*/
int _test5_m(struct _arec__test5_m* _this, float*  _ret0)
{
static const void * _atbl[] = { &&lstate_0, &&lstate_1 };
int _state = _this->_state;
_this->_state = 0;
if (_state > 0 && _state < 1) goto *(_atbl[_state]);
lstate_0: 
{
    lstate_1: 
    if (_ret0 == NULL){
        _this->_state = 1;
    }
    else{
        *(_ret0) = 3;
    }
    return _this->_state; 
}
return _this->_state;
}
int _test5_main(struct _arec__test5_main* _this)
{
static const void * _atbl[] = { &&lstate_0, &&lstate_1, &&lstate_2, &&lstate_3 };
int _state = _this->_state;
_this->_state = 0;
if (_state > 0 && _state < 3) goto *(_atbl[_state]);
lstate_0: 
{
    _this->test5_main_v[0]=1;
    _this->_arec__test5_m._state = 0;
    _this->_arec__test5_m.test5_m_y = 3;
    lstate_1: _state = _test5_m( &(_this->_arec__test5_m), &(_this->test5_main_res)) ;
    if (_state > 0) {_this->_state = 1; return _this->_state;} 
    _this->_arec__test5_m._state = 0;
    _this->_arec__test5_m.test5_m_y = 4;
    _test5_m( &(_this->_arec__test5_m), ((float*) 0UL)) ;
    test5_f= &(_this->_arec__test5_m);
    lstate_2: _state = _test5_m(test5_f, (&_this->test5_main_res) );
    if (_state > 0) {_this->_state = 2; return _this->_state;} 
    test5_e->_state = 1;
    lstate_3: _state = test5_e->_state;
    if (_state > 0) {_this->_state = 3; return _this->_state;} 
}
return _this->_state;
}
void _test5_irq()
{
    {
        test5_e->_state = 0;
    }
}